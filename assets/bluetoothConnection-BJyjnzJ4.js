import{D as g,E as D,G as A,H as E,I as m,m as b,J as v,K as M,l as S,L as d,u as O,C as B}from"./index-B27VgFVv.js";function C(e){return A()?(E(e),!0):!1}const w=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const G=Object.prototype.toString,L=e=>G.call(e)==="[object Object]";function y(e){return Array.isArray(e)?e:[e]}function j(e){return m()}function I(e,t=!0,n){j()?g(e,n):t?e():D(e)}function W(e,t,n){return b(e,t,{...n,immediate:!0})}const k=w?window:void 0,q=w?window.navigator:void 0;function x(e){var t;const n=d(e);return(t=n?.$el)!=null?t:n}function N(...e){const t=[],n=()=>{t.forEach(o=>o()),t.length=0},f=(o,c,u,l)=>(o.addEventListener(c,u,l),()=>o.removeEventListener(c,u,l)),r=S(()=>{const o=y(d(e[0])).filter(c=>c!=null);return o.every(c=>typeof c!="string")?o:void 0}),s=W(()=>{var o,c;return[(c=(o=r.value)==null?void 0:o.map(u=>x(u)))!=null?c:[k].filter(u=>u!=null),y(d(r.value?e[1]:e[0])),y(O(r.value?e[2]:e[1])),d(r.value?e[3]:e[2])]},([o,c,u,l])=>{if(n(),!o?.length||!c?.length||!u?.length)return;const p=L(l)?{...l}:l;t.push(...o.flatMap(h=>c.flatMap(i=>u.map(T=>f(h,i,T,p)))))},{flush:"post"}),a=()=>{s(),n()};return C(n),a}function P(){const e=v(!1),t=m();return t&&g(()=>{e.value=!0},t),e}function U(e){const t=P();return S(()=>(t.value,!!e()))}function V(e){let{acceptAllDevices:t=!1}=e||{};const{filters:n=void 0,optionalServices:f=void 0,navigator:r=q}=e||{},s=U(()=>r&&"bluetooth"in r),a=v(),o=v(null);b(a,()=>{h()});async function c(){if(s.value){o.value=null,n&&n.length>0&&(t=!1);try{a.value=await r?.bluetooth.requestDevice({acceptAllDevices:t,filters:n,optionalServices:f})}catch(i){o.value=i}}}const u=v(),l=v(!1);function p(){l.value=!1,a.value=void 0,u.value=void 0}async function h(){if(o.value=null,a.value&&a.value.gatt){N(a,"gattserverdisconnected",p,{passive:!0});try{u.value=await a.value.gatt.connect(),l.value=u.value.connected}catch(i){o.value=i}}}return I(()=>{var i;a.value&&((i=a.value.gatt)==null||i.connect())}),C(()=>{var i;a.value&&((i=a.value.gatt)==null||i.disconnect())}),{isSupported:s,isConnected:M(l),device:a,requestDevice:c,server:u,error:o}}const J=B("bluetoothConnection",()=>{const{isSupported:e,isConnected:t,device:n,requestDevice:f,server:r}=V({acceptAllDevices:!0,filters:[{namePrefix:"UNITO"}],optionalServices:["0000ffe0-0000-1000-8000-00805f9b34fb","0000ffe1-0000-1000-8000-00805f9b34fb"]});async function s(){await f()}function a(){n.value?.gatt?.disconnect()}return{isSupported:e,isConnected:t,device:n,server:r,connect:s,disconnect:a}});async function K(e,t,n){if(!e)throw new Error("No GATT server connected");const s=await(await(await e.getPrimaryService(n)).getCharacteristic(t)).readValue();return new Uint8Array(s.buffer)}export{K as r,J as u};
